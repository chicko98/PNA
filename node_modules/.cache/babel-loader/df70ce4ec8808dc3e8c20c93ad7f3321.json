{"ast":null,"code":"var _jsxFileName = \"/Users/franciscopires/Downloads/quiz-app-master/final/src/App.js\";\nimport React, { useState } from \"react\";\nexport default function App() {\n  const questions = [{\n    questionText: \"What is the capital of France?\",\n    answerOptions: [{\n      answerText: \"New York\",\n      isCorrect: false\n    }, {\n      answerText: \"London\",\n      isCorrect: false\n    }, {\n      answerText: \"Paris\",\n      isCorrect: true\n    }, {\n      answerText: \"Dublin\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Who is CEO of Tesla?\",\n    answerOptions: [{\n      answerText: \"Jeff Bezos\",\n      isCorrect: false\n    }, {\n      answerText: \"Elon Musk\",\n      isCorrect: true\n    }, {\n      answerText: \"Bill Gates\",\n      isCorrect: false\n    }, {\n      answerText: \"Tony Stark\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"The iPhone was created by which company?\",\n    answerOptions: [{\n      answerText: \"Apple\",\n      isCorrect: true\n    }, {\n      answerText: \"Intel\",\n      isCorrect: false\n    }, {\n      answerText: \"Amazon\",\n      isCorrect: false\n    }, {\n      answerText: \"Microsoft\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"How many Harry Potter books are there?\",\n    answerOptions: [{\n      answerText: \"1\",\n      isCorrect: false\n    }, {\n      answerText: \"4\",\n      isCorrect: false\n    }, {\n      answerText: \"6\",\n      isCorrect: false\n    }, {\n      answerText: \"7\",\n      isCorrect: true\n    }]\n  }];\n  const numberquestions = 3;\n  const array = Array(numberquestions).fill().map(() => Math.floor(questions.length * Math.random()));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [answer, setAnswer] = useState([]);\n  const [disable, setDisable] = useState(false);\n  const [showNext, setShowNext] = useState(false);\n\n  const nextPrevHandler = text => {\n    if (text === \"next\" && currentQuestion !== numberquestions) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n\n    if (text === \"prev\" && currentQuestion !== 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n\n  const handleAnswerOptionClick = answerOption => {\n    let {\n      isCorrect,\n      answerText\n    } = answerOption;\n    setAnswer(previousState => [...previousState, answerText]);\n    console.log(answer);\n\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setDisable(true);\n    }\n  };\n\n  const reviewHandler = () => {\n    setShowScore(false);\n    setCurrentQuestion(0);\n    setShowNext(true);\n  };\n\n  const resetStateClick = () => {\n    setShowNext(false);\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showNext ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prevnext-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      nextPrevHandler(\"prev\");\n    },\n    className: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      nextPrevHandler(\"next\");\n    },\n    className: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Next\")) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"retry\",\n    onClick: resetStateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"Retry\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"review\",\n    onClick: reviewHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"You scored \", score, \" out of \", numberquestions))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    disabled: disable,\n    onClick: () => handleAnswerOptionClick(answerOption),\n    className: showNext ? answer[currentQuestion] === answerOption.answerText && !answerOption.isCorrect ? \"incorrect\" : answerOption.isCorrect ? \"correct\" : \"\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, answerOption.answerText))))));\n}","map":{"version":3,"sources":["/Users/franciscopires/Downloads/quiz-app-master/final/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","numberquestions","array","Array","fill","map","Math","floor","length","random","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","answer","setAnswer","disable","setDisable","showNext","setShowNext","nextPrevHandler","text","handleAnswerOptionClick","answerOption","previousState","console","log","nextQuestion","reviewHandler","resetStateClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const questions = [\r\n    {\r\n      questionText: \"What is the capital of France?\",\r\n      answerOptions: [\r\n        { answerText: \"New York\", isCorrect: false },\r\n        { answerText: \"London\", isCorrect: false },\r\n        { answerText: \"Paris\", isCorrect: true },\r\n        { answerText: \"Dublin\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Who is CEO of Tesla?\",\r\n      answerOptions: [\r\n        { answerText: \"Jeff Bezos\", isCorrect: false },\r\n        { answerText: \"Elon Musk\", isCorrect: true },\r\n        { answerText: \"Bill Gates\", isCorrect: false },\r\n        { answerText: \"Tony Stark\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: true },\r\n        { answerText: \"Intel\", isCorrect: false },\r\n        { answerText: \"Amazon\", isCorrect: false },\r\n        { answerText: \"Microsoft\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How many Harry Potter books are there?\",\r\n      answerOptions: [\r\n        { answerText: \"1\", isCorrect: false },\r\n        { answerText: \"4\", isCorrect: false },\r\n        { answerText: \"6\", isCorrect: false },\r\n        { answerText: \"7\", isCorrect: true },\r\n      ],\r\n    },\r\n  ];\r\n  const numberquestions = 3;\r\n  const array = Array(numberquestions)\r\n\t\t.fill()\r\n\t  \t.map(() => Math.floor((questions.length) * Math.random()));\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [answer, setAnswer] = useState([]);\r\n  const [disable, setDisable] = useState(false);\r\n  const [showNext, setShowNext] = useState(false);\r\n\r\n  const nextPrevHandler = (text) => {\r\n    if (text === \"next\" && currentQuestion !== numberquestions) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n    if (text === \"prev\" && currentQuestion !== 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleAnswerOptionClick = (answerOption) => {\r\n    let { isCorrect, answerText } = answerOption;\r\n    setAnswer((previousState) => [...previousState, answerText]);\r\n    console.log(answer);\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n      setDisable(true);\r\n    }\r\n  };\r\n\r\n  const reviewHandler = () => {\r\n    setShowScore(false);\r\n    setCurrentQuestion(0);\r\n    setShowNext(true);\r\n  };\r\n\r\n  const resetStateClick =()=>{\r\n\tsetShowNext(false);\r\n\tsetCurrentQuestion (0)\r\n\tsetShowScore(false)\r\n\tsetScore(0)\r\n}\r\n  return (\r\n    <>\r\n      {showNext ? (\r\n        <div className=\"prevnext-section\">\r\n          <button\r\n            onClick={() => {\r\n              nextPrevHandler(\"prev\");\r\n            }}\r\n            className=\"next\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              nextPrevHandler(\"next\");\r\n            }}\r\n            className=\"next\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"app\">\r\n        {showScore ? (\r\n          <>\r\n            <div className=\"score-section\">\r\n\t\t\t\r\n\t\t\t\t<button className=\"retry\" onClick={resetStateClick}>\r\n\t\t\t\tRetry\r\n\t\t\t\t</button>\t\r\n\t\t\t\r\n              <button className=\"review\" onClick={reviewHandler}>\r\n                Review\r\n              </button>\r\n              <h3>\r\n                You scored {score} out of {numberquestions}\r\n              </h3>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"question-section\">\r\n              <div className=\"question-count\">\r\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n              </div>\r\n              <div className=\"question-text\">\r\n                {questions[currentQuestion].questionText}\r\n              </div>\r\n            </div>\r\n            <div className=\"answer-section\">\r\n              {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n                <button\r\n                  disabled={disable}\r\n                  onClick={() => handleAnswerOptionClick(answerOption)}\r\n                  className={\r\n                    showNext\r\n                      ? answer[currentQuestion] === answerOption.answerText &&\r\n                        !answerOption.isCorrect\r\n                        ? \"incorrect\"\r\n                        : answerOption.isCorrect\r\n                        ? \"correct\"\r\n                        : \"\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {answerOption.answerText}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}